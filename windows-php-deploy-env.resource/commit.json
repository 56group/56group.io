{"compress":true,"commitItems":[["f93f2be2-fe60-4de8-819f-ef61c85c7220",1529577646818,"---\ntitle: PHP Windows发布环境安装\ndate: 2018-06-21 13:03:00\ntags: [PHP, Windows, 环境]\ncategories: PHP\n---\n### Windows PHP发不环境安装\n\n> Windows Server 2003 R2可以安装PHP 5.6.x版本的PHP环境, Windows Server 2012 R2可以安装PHP 7.2.x版本的PHP环境, 因为不同Server版本的vc++环境不一样, 2003 R2安装VC++2012, 2012 R2安装VC++2015\n\n##### 下载PHP,下载Nginx,下载MySQL,下载VC++\n\n[PHP 5.6.36](http://php.net/downloads.php#v5.6.36)\n[PHP 7.2.6](http://php.net/downloads.php#v7.2.6)\n[Nginx 1.15.0](http://nginx.org/en/download.html)\n[MySQL 5.7.22](https://dev.mysql.com/downloads/mysql/5.7.html#downloads)\n[VC++ 2012](https://www.microsoft.com/en-us/download/details.aspx?id=30679)\n[VC++ 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145)\n\n> PHP和Nginx和MySQL下载压缩包,解压到对应的安装目录, VC++下载对应服务器版本的对应版本,然后正常安装\n\n##### PHP文件配置\n\n- 1. 复制php.ini-development为php.ini\n- 2. 更改php.ini,打开相关的扩展和配置\n\n```\n# php.ini配置更改\nextension=php_openssl.dll\nextension=php_pdo_mysql.dll\nextension_dir = \"./ext\"\n```\n##### MySQL数据库安装\n\n- 1. 使用管理员打开cmd,切换到MySQL解压目录,运行**mysqld.exe install**\n- 2. 更改数据库配置,在MySQL解压目录下新建一个my.ini文件,添加相关配置\n\n```\n[client]\nsocket=D:/lxxhd/mysql-5.7.22/mysql.sock\n[mysqld]\ndatadir=D:/lxxhd/mysql-5.7.22/data\nsocket=D:/lxxhd/mysql-5.7.22/mysql.sock\nuser=mysql\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n# LOG\nslow_query_log = 1\nslow_query_log_file = D:/lxxhd/mysql-5.7.22/mysql-slow.log\nlong_query_time = 2\n# GENERAL LOG\ngeneral_log = 1\ngeneral_log_file = D:/lxxhd/mysql-5.7.22/mysql-general.log\n# BINARY LOG\nserver_id=101\nlog_bin=D:/lxxhd/mysql-5.7.22/mysql-bin.log\nbinlog_format=ROW\nsync_binlog=1\nexpire_logs_days=7\n# ERROR LOG\nlog_error=D:/lxxhd/mysql-5.7.22/mysql.err\n# OTHER\ncharacter_set_server = utf8\ntransaction-isolation = READ-COMMITTED\nmax_connections = 1000\nlog-queries-not-using-indexes\nlog_throttle_queries_not_using_indexes = 10\n# INNODB\ninnodb_strict_mode=1\ninnodb_file_format=Barracuda\ninnodb_file_format_max=Barracuda\ninnodb_read_io_threads=4\ninnodb_write_io_threads=8 # 8 ~ 12\ninnodb_io_capacity=1000 # HDD:800 ~ 1200 SSD: 10000+\ninnodb_adaptive_flushing=1 # SSD: 0\ninnodb_flush_log_at_trx_commit=1\ninnodb_max_dirty_pages_pct=75\ninnodb_buffer_pool_dump_at_shutdown=1\ninnodb_buffer_pool_load_at_startup=1\ninnodb_flush_neighbors=1 # SSD:0\ninnodb_log_file_size=1024M # SSD:4G~8G HDD:1G~2G\ninnodb_purge_threads=1 # SSD:4\ninnodb_lock_wait_timeout=3\ninnodb_print_all_deadlocks=1\ninnodb_buffer_pool_size=4096M # MEM 60%~80%\n[mysqld_safe]\nlog-error=D:/lxxhd/mysql-5.7.22/log/mysqld.log\npid-file=D:/lxxhd/mysql-5.7.22/log/mysqld.pid\n```\n- 3. 在MySQL解压目录的cmd命令行中init数据库,运行**mysqld.exe --initialize-insecure**命令\n- 4. 这个时候数据库的密码为'',运行**ALTER USER  'root'@'localhost' IDENTIFIED BY 'YOUR_NEW_PASS';**命令更改密码\n- 5. 使用**net start mysql**启动服务\n- 6. 配置MySQL环境变量\n\n##### Nginx服务安装和配置\n\n- 1. 解压安装Nginx\n- 2. 运行nginx.exe文件,然后通过**tasklist /fi  \"imagename eq nginx.exe\"**命令查看nginx进程, 访问**http://localhost**查看nginx页面(注:需要注意访问端口的配置)\n- 3. 加入PHP配置文件,更改nginx.conf加入php关联配置\n\n```\n# nginx配置文件\n\n#user  nobody;\nworker_processes  1;\n\nerror_log  logs/error.log;\nerror_log  logs/error.log  notice;\nerror_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    log_format access '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    #server {  \n    #    listen       80 default_server;\n    #    server_name  _;  \n  \n    #    return 444;  \n    #}\n\n    server {\n        listen       8080;\n        server_name  localhost;\n        # client_max_body_size 100m;\n\n        #charset koi8-r;\n        charset utf-8;\n        # root D:/lxxhd/www/lxxhd/public;\n\n        access_log  logs/lxxhd.access.log  main;\n\n        location / {\n            # try_files $uri $uri/ /index.php?$query_string;\n            # index index.php index.html index.htm;\n            root D:/lxxhd/www;\n            index index.php index.html index.htm;\n        }\n\n        error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        location ~ \\.php$ { \n            fastcgi_pass 127.0.0.1:9000;\n\t    fastcgi_index index.php;\n            #include fastcgi.conf;\n            fastcgi_split_path_info       ^(.+\\.php)(/.+)$;    \n            fastcgi_param PATH_INFO       $fastcgi_path_info;    \n            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;    \n            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;    \n            include                       fastcgi_params;\n        }\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        location ~ /\\.ht {\n            deny  all;\n        }\n    }\n}\n```\n- 4. 在www目录下编写index.php文件\n\n```\n<?php\n    phpinfo();\n?>\n```\n- 5. 启动php服务\n\n```\nD:/lxxhd/php-5.6.36/php-cgi.exe -b 127.0.0.1:9000 -c D:/lxxhd/php-5.6.36/php.ini\n```\n- 6. 重启nginx服务(可以通过进程管理停止nginx服务,然后运行nginx.exe),访问**http://localhost**查看phpinfo()信息\n\n##### 编写bat脚本\n\n> 下载[RunHiddenConsole.exe](https://redmine.lighttpd.net/attachments/660/RunHiddenConsole.zip)\n\n```\n# start.bat\nREM REM是bat文件的注释类似于php的//\nREM 设置不输出命令\n@ECHO off\nREM 设置Nginx和php-cgi的目录\nSET php_home=PHP安装目录\nSET nginx_home=NGINX安装目录\n\nREM 输出状态\nECHO Starting PHP FastCGI...\nREM 启动php-cgi -b 端口 -c php.ini位置\nREM %php_home%为获取上面set的php_home的值\nRunHiddenConsole %php_home%php-cgi.exe -b 127.0.0.1:9000 -c %php_home%php.ini\nREM 输出状态\nECHO Starting nginx...\nREM 启动Nginx -p Nginx的根目录\nRunHiddenConsole %nginx_home%nginx.exe -p %nginx_home%\n```\n```\n# stop.bat\n@ECHO off ECHO Stopping nginx...\nREM 结束进程 /F 强制终止 /IM 指定的进程\nTASKKILL /F /IM nginx.exe\nECHO Stopping PHP FastCGI...\nTASKKILL /F /IM php-cgi.exe\nREM 关闭窗口\nEXIT\n```\n> start.bat和stop.bat和RunHiddenConsole.exe放在同一个目录下,使用start.bat启动服务\n\n> 注:nginx的worker_processes要与cpu的数量一致\n\n##### NGINX Laravel发布配置\n\n```\n\n#user  nobody;\nworker_processes  32;\n\nerror_log  logs/error.log;\nerror_log  logs/error.log  notice;\nerror_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    log_format access '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    #server {  \n    #    listen       80 default_server;\n    #    server_name  _;  \n  \n    #    return 444;  \n    #}\n\n    server {\n        listen       8080;\n        server_name  localhost;\n        client_max_body_size 100m;\n\n        #charset koi8-r;\n        charset utf-8;\n        root D:/lxxhd/www/lxxhd/public;\n\n        access_log  logs/lxxhd.access.log  main;\n\n        location / {\n            try_files $uri $uri/ /index.php?$query_string;\n            index index.php index.html index.htm;\n        }\n\n        error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        location ~ \\.php$ { \n            fastcgi_pass 127.0.0.1:9000;\n\t    fastcgi_index index.php;\n            #include fastcgi.conf;\n            fastcgi_split_path_info       ^(.+\\.php)(/.+)$;    \n            fastcgi_param PATH_INFO       $fastcgi_path_info;    \n            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;    \n            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;    \n            include                       fastcgi_params;\n        }\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        location ~ /\\.ht {\n            deny  all;\n        }\n    }\n}\n```",[[1529577646123,["Administrator@DESKTOP-G7HA8HD",[[1,900,"\n"]],[899,899],[900,900]]],[1529577646335,["Administrator@DESKTOP-G7HA8HD",[[1,900,"extension=php_fileinfo.dll"]],[900,900],[926,926]]]]]]}